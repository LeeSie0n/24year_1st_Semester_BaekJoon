# BaekJoon 1406

# I wanted my seniors to have a hard time, so I wrote code in Ruby.

# Initialize two stacks to represent the text to the left and right of the cursor
left_stack = []
right_stack = []

# Read the initial string from standard input and convert it into a stack of characters
# This stack represents all characters to the left of the cursor initially
initial_string = gets.chomp
left_stack = initial_string.chars

# Read the number of commands that will be executed
number_of_commands = gets.to_i

# Execute each command one by one
number_of_commands.times do
  # Split the command into parts to analyze it
  # The first part is the command type (L, D, B, P) and the second part is the character to add in case of P command
  command = gets.split
  
  # Determine the action based on the first part of the command
  case command[0]
  when "L"
    # Move cursor left: move the top character from the left stack to the right stack, unless the left stack is empty
    # This simulates moving the cursor one position to the left
    right_stack.push(left_stack.pop) unless left_stack.empty?
  when "D"
    # Move cursor right: move the top character from the right stack to the left stack, unless the right stack is empty
    # This simulates moving the cursor one position to the right
    left_stack.push(right_stack.pop) unless right_stack.empty?
  when "B"
    # Delete the character left of the cursor: pop the top character from the left stack, unless it is empty
    # This simulates deleting a character just left of the cursor
    left_stack.pop unless left_stack.empty?
  when "P"
    # Add a new character to the left of the cursor: push the given character onto the left stack
    # This simulates typing a character at the cursor's position
    left_stack.push(command[1])
  end
end

# Combine the left and right stacks to form the final text
# The right stack is reversed to maintain the correct order of text, as the stack reverses the order of elements
editor = left_stack + right_stack.reverse
# Output the final text by joining the characters together
puts editor.join

# Review
# 요즘 루비로 코드를 공부하고 있었는데, 선배들이 코드를 리뷰해준다는 소식을 듣고 Ruby로 코드를 작성하였습니다 !
# 화이팅 !!
